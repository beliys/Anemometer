apiVersion: {{$.Values.core_workloads_api}}
kind: Deployment
metadata:
  name: {{.Values.serviceName}}-deployment
  labels:
    app: {{.Values.serviceName}}
    type: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: {{.Values.serviceName}}
      type: backend
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{.Values.serviceName}}
        type: backend
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
    spec:
      terminationGracePeriodSeconds: 180
      containers:
      - name: {{.Values.serviceName}}-php-container
        imagePullPolicy: {{ .Values.fpm.pullPolicy }}
        image: {{ .Values.fpm.image | quote }}
        env:
          - name: ANEMOMETER_MYSQL_HOST
            valueFrom:
              secretKeyRef:
                name: {{.Values.serviceName}}-secret
                key: host
          - name: ANEMOMETER_MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: {{.Values.serviceName}}-secret
                key: user
          - name: ANEMOMETER_MYSQL_PASS
            valueFrom:
              secretKeyRef:
                name: {{.Values.serviceName}}-secret
                key: pass
          - name: ANEMOMETER_MYSQL_DB
            valueFrom:
              secretKeyRef:
                name: {{.Values.serviceName}}-secret
                key: db
        resources:
          requests:
            cpu: 0.1
            memory: 200Mi
          limits:
            cpu: 1
            memory: 1Gi
        readinessProbe:
          tcpSocket:
            port: 9000
          initialDelaySeconds: 5
          failureThreshold: 3
          successThreshold: 1
          timeoutSeconds: 1
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 9000
          initialDelaySeconds: 5
          failureThreshold: 3
          successThreshold: 1
          timeoutSeconds: 1
          periodSeconds: 10
        lifecycle:
          preStop:
            exec:
              # 1) wait endpoint removing from iptables
              # 2) wait requests from nginx container
              command: ["sleep", "120"]

      - name: {{.Values.serviceName}}-nginx-container
        imagePullPolicy: {{ .Values.nginx.pullPolicy }}
        image: {{ .Values.nginx.image | quote }}
        env:
          - name: NGINX_FASTCGI_PASS
            value: localhost:9000
        resources:
          requests:
            cpu: 0.1
            memory: 100Mi
          limits:
            cpu: 1
            memory: 1Gi
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          failureThreshold: 3
          successThreshold: 1
          timeoutSeconds: 1
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          failureThreshold: 3
          successThreshold: 1
          timeoutSeconds: 1
          periodSeconds: 10
        lifecycle:
          preStop:
            exec:
              # wait endpoint removing from iptables
              # must be lower than fpm sleep to send all requests
              command: ["sleep", "30"]
